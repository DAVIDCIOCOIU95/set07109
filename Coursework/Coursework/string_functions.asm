; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27026.1 

	TITLE	C:\set07109\Coursework\Coursework\string_functions.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_chomp
PUBLIC	_my_strlen
PUBLIC	_my_strcmp
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -4						; size = 4
_string1$ = 8						; size = 4
_string2$ = 12						; size = 4
_my_strcmp PROC
; File c:\set07109\coursework\coursework\string_functions.c
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 31
	mov	DWORD PTR _i$[ebp], 0
$LN2@my_strcmp:
; Line 32
	mov	eax, DWORD PTR _string1$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _string2$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@my_strcmp
; Line 34
	mov	ecx, DWORD PTR _string1$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN4@my_strcmp
; Line 36
	jmp	SHORT $LN3@my_strcmp
$LN4@my_strcmp:
; Line 38
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 39
	jmp	SHORT $LN2@my_strcmp
$LN3@my_strcmp:
; Line 40
	mov	ecx, DWORD PTR _string1$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movsx	eax, BYTE PTR [ecx]
	mov	edx, DWORD PTR _string2$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [edx]
	sub	eax, ecx
; Line 41
	mov	esp, ebp
	pop	ebp
	ret	0
_my_strcmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -4						; size = 4
_string$ = 8						; size = 4
_my_strlen PROC
; File c:\set07109\coursework\coursework\string_functions.c
; Line 16
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 17
	mov	DWORD PTR _i$[ebp], 0
$LN2@my_strlen:
; Line 18
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@my_strlen
; Line 20
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 21
	jmp	SHORT $LN2@my_strlen
$LN3@my_strlen:
; Line 22
	mov	eax, DWORD PTR _i$[ebp]
; Line 23
	mov	esp, ebp
	pop	ebp
	ret	0
_my_strlen ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_len$ = -4						; size = 4
_string$ = 8						; size = 4
_chomp	PROC
; File c:\set07109\coursework\coursework\string_functions.c
; Line 6
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 7
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_my_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 8
	cmp	DWORD PTR _len$[ebp], 1
	jle	SHORT $LN1@chomp
	mov	ecx, DWORD PTR _string$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	movsx	edx, BYTE PTR [ecx-1]
	cmp	edx, 10					; 0000000aH
	jne	SHORT $LN1@chomp
; Line 10
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR [eax-1], 0
$LN1@chomp:
; Line 12
	mov	esp, ebp
	pop	ebp
	ret	0
_chomp	ENDP
_TEXT	ENDS
END
